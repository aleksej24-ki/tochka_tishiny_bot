import os
import random
from supabase import create_client, Client

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_ANON_KEY = os.getenv("SUPABASE_ANON_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not SUPABASE_URL or not SUPABASE_ANON_KEY:
    raise Exception("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω—ã SUPABASE_URL –∏–ª–∏ SUPABASE_ANON_KEY!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
supabase: Client = create_client(SUPABASE_URL, SUPABASE_ANON_KEY)

def get_random_parable():
    try:
        print("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏—Ç—á –∏–∑ Supabase —á–µ—Ä–µ–∑ API...")
        response = supabase.table("parables").select("text").execute()
        data = response.data

        if not data:
            print("‚ùó –í Supabase –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –ø—Ä–∏—Ç—á–∏")
            return "‚ùó –í –±–∞–∑–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –ø—Ä–∏—Ç—á–∏."

        parable = random.choice(data)
        print("‚úÖ –ü—Ä–∏—Ç—á–∞ –≤—ã–±—Ä–∞–Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º")
        return parable["text"]

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏—Ç—á–∏ –∏–∑ Supabase:", e)
        return "üìñ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏—Ç—á—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
